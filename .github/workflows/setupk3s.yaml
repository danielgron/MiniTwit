name: setup-k3s

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
        # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # https://github.com/docker/metadata-action

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete configmap api -n minitwit  

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete secret api -n minitwit

      
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: create configmap api --from-env-file=./k3s/production.env -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: create secret generic api --from-literal=POSTGRES_PW=kodeord --from-literal=POSTGRES_HOST=postgres -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f ./k3s/test.postgres.yaml -n minitwit

      #- name: Configure SSH
      #  run: |
      #    mkdir -p ~/.ssh/
      #    echo "$SSH_KEY" > ~/.ssh/terraform
      #    chmod 600 ~/.ssh/terraform
      #  env:
      #    SSH_KEY: ${{ secrets.SSH_KEY_TERRAFORM }}

      #- name: Deploy to server
      #  run: >
      #    ssh root@$SSH_HOST
      #    -i ~/.ssh/terraform -o StrictHostKeyChecking=no
      #    'sh /tmp/provision.sh'
      #  env:
      #    SSH_HOST: ${{ secrets.SSH_HOST_TERRAFORM }}