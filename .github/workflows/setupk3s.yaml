name: setup-k3s

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
        # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # https://github.com/docker/metadata-action
      

      - run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        

      - run: mkdir ~/.kube

      - run: echo $KUBE_CONFIG_DATA | base64 -d > $HOME/.kube/config
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

      - run: kubectl get pods

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete configmap api -n minitwit  

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete secret api -n minitwit

      
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: create configmap api --from-env-file=./k3s/production.env -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: create secret generic api --from-literal=POSTGRES_PW=kodeord --from-literal=POSTGRES_HOST=postgres -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f ./k3s/test.postgres.yaml -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -n minitwit -f <(envsubst < ./k3s/letsencrypt.yaml)

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
            args: apply -f ./k3s/middleware.yaml -n minitwit

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f ./k3s/ingress.yaml -n minitwit
